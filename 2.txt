#!/bin/bash

INPUT_PIPE="./server_input"
OUTPUT_PIPE="./server_output"

# Проверка каналов
[[ ! -p "$INPUT_PIPE" || ! -p "$OUTPUT_PIPE" ]] && { echo "Сервер не запущен!"; exit 1; }

# Функция для подсчета B и C (аналогична серверной)
calculate_bc() {
    local target=$1
    local guess=$2
    local B=0
    local C=0

    # Преобразуем в массивы
    local target_digits=($(echo "$target" | grep -o .))
    local guess_digits=($(echo "$guess" | grep -o .))

    # Считаем быков
    for i in {0..4}; do
        if [[ "${target_digits[i]}" == "${guess_digits[i]}" ]]; then
            ((B++))
            target_digits[i]="X"
            guess_digits[i]="Y"
        fi
    done

    # Считаем коров
    declare -A count
    for d in "${target_digits[@]}"; do
        [[ "$d" != "X" ]] && ((count[$d]++))
    done

    for d in "${guess_digits[@]}"; do
        if [[ "$d" != "Y" && -n "${count[$d]}" && "${count[$d]}" -gt 0 ]]; then
            ((C++))
            ((count[$d]--))
        fi
    done

    echo "$B $C"
}

# Генерируем все возможные числа (10000-99999)
possible_numbers=()
for num in {10000..99999}; do
    possible_numbers+=("$num")
done

# Основной цикл угадывания
for attempt in {1..50}; do
    # Выбираем первое число из списка
    guess="${possible_numbers[0]}"
    echo "Попытка $attempt: $guess"
    echo "$guess" > "$INPUT_PIPE"

    # Получаем ответ
    read -r B C < "$OUTPUT_PIPE"

    # Проверка победы
    if [[ "$B" -eq 5 ]]; then
        echo "Угадано за $attempt попыток!"
        echo "QUIT" > "$INPUT_PIPE"
        exit 0
    fi

    # Фильтруем возможные числа
    new_possible=()
    for num in "${possible_numbers[@]}"; do
        result=$(calculate_bc "$num" "$guess")
        if [[ "$result" == "$B $C" ]]; then
            new_possible+=("$num")
        fi
    done

    possible_numbers=("${new_possible[@]}")

    # Проверка на отсутствие вариантов
    if [[ "${#possible_numbers[@]}" -eq 0 ]]; then
        echo "Ошибка: Нет возможных чисел!"
        exit 1
    fi
done

echo "Не угадано за 50 попыток."
echo "QUIT" > "$INPUT_PIPE"
