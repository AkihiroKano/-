#!/bin/bash

INPUT_PIPE="./server_input"
OUTPUT_PIPE="./server_output"

# Проверка каналов
[[ ! -p "$INPUT_PIPE" || ! -p "$OUTPUT_PIPE" ]] && { echo "Сервер не запущен!"; exit 1; }

# Генерация всех возможных чисел (10000-99999)
generate_numbers() {
    for num in {10000..99999}; do
        echo "$num"
    done
}

# Фильтрация чисел на основе B и C
filter_numbers() {
    local guess=$1
    local target_B=$2
    local target_C=$3

    # Разбиваем guess на цифры
    guess_digits=($(grep -o . <<< "$guess"))

    while read -r num; do
        # Разбиваем текущее число на цифры
        num_digits=($(grep -o . <<< "$num"))

        # Подсчет быков (B)
        B=0
        for i in {0..4}; do
            [[ "${num_digits[i]}" == "${guess_digits[i]}" ]] && ((B++))
        done

        # Подсчет коров (C)
        declare -A count
        for d in "${num_digits[@]}"; do
            ((count[$d]++))
        done

        C=0
        for d in "${guess_digits[@]}"; do
            if [[ -n "${count[$d]}" && "${count[$d]}" -gt 0 ]]; then
                ((C++))
                ((count[$d]--))
            fi
        done
        C=$((C - B))  # Убираем быков из коров

        # Проверка соответствия target_B и target_C
        [[ "$B" -eq "$target_B" && "$C" -eq "$target_C" ]] && echo "$num"
    done
}

# Основной цикл
mapfile -t possible < <(generate_numbers)

for attempt in {1..50}; do
    # Выбираем первое число из списка
    guess="${possible[0]}"
    echo "Попытка $attempt: $guess"
    echo "$guess" > "$INPUT_PIPE"

    # Получаем ответ
    read -r B C < "$OUTPUT_PIPE"

    # Проверка победы
    if [[ "$B" -eq 5 ]]; then
        echo "Угадано за $attempt попыток!"
        echo "QUIT" > "$INPUT_PIPE"
        exit 0
    fi

    # Фильтрация возможных чисел
    mapfile -t possible < <(printf "%s\n" "${possible[@]}" | filter_numbers "$guess" "$B" "$C")

    # Проверка на отсутствие вариантов
    if [[ ${#possible[@]} -eq 0 ]]; then
        echo "Ошибка: Нет возможных чисел!"
        exit 1
    fi
done

echo "Не угадано за 50 попыток."
echo "QUIT" > "$INPUT_PIPE"
